pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--character sprites
--by mabbees

function _init()
	mnu = sprite_menu
end

function _update60()
	if btnp(⬅️) and mnu:hasprev() then
		mnu = mnu:prev()
	end
	if btnp(➡️) and mnu:hasnext() then
		mnu = mnu:next()
	end
end

function _draw()
	cls()
	
	local sprite = mnu:get()
	
	draw_with_offset(32,64)
		(sprite.draw)
		()
	
	print(sprite.label)
end
-->8
-- library tools
-- * functions
-- * algebraic functions
-- * drawing


-- functions
function id(d) return d end

function const(x)
	return function() return x end
end

function noop() end

function compose(f,g)
	return function(...)
		return g(f(...))
	end
end

function suspend(f)
	return function(...)
		local args = {...}
		return function()
			return f(unpack(args))
		end
	end
end

function call(method, ...)
	local args = {...}
	return function(e)
		return e[method](e,unpack(args))
	end
end

function once(f)
 local done = false
 return function(val)
  if not done then
   done = true
   f(val)
  end
 end
end

function reduce(f,seed)
	return function(list)
		local ret = seed
		for x in all(list) do
			ret = f(ret, x)
		end
		return ret
	end
end

function list_copy(list)
	local ret = {}
	for x in all(list) do
		add(ret, x)
	end
	return ret
end

chain = reduce(compose,id)

function lerp(a,b,t)
	return a + t*(b-a)
end


-- algebriac functions --------

function monad_loop(m)
	return m:flatmap(function()
		return monad_loop(m)
	end)
end

function monad_seq(empty)
	return reduce(
		function(a,m)
			return a:flatmap(const(m))
		end,
		empty
	)
end

function lift2(f)
	return function(mx,my)
		return mx:flatmap(function(x)
			return my:map(function(y)
				return f(x,y)
			end)
		end)
	end
end

pair = lift2(pack)


-- drawing --------------------
function monochrome_palette(col)
	local palette = {}
	for i=1,16 do
		palette[i]=col
	end
	return palette
end

function draw_with_color(col)
	return suspend(function(draw)
		local c = peek(0x5f25)
		color(col)
		draw()
		poke(0x5f25, c)
	end)
end

function draw_with_pattern(pat)
	return suspend(function(draw)
		local p1,p2,p3 = peek(0x5f31,3)
		fillp(pat)
		draw()
		poke(0x5f31,p1,p2,p3)
	end)
end

function draw_with_transparency(col)
	return suspend(function(draw)
		palt(col,true)
		draw()
		palt()
	end)
end

-- in case the draw call itself
-- makes changes to palette
-- we want the "outer" palette
-- to remain active
override_palette = false
function draw_with_palette(palette)
	return suspend(function(draw)
		if override_palette then
			draw()
		else
			override_palette = true
			local p1,p2,p3,p4 = peek4(0x5f00,4)
			pal(palette)
			draw()
			poke4(0x5f00,p1,p2,p3,p4)
			override_palette = false
		end
	end)
end

function draw_with_offset(dx, dy)
	return suspend(function(draw)
		local cx,cy =	peek2(0x5f28, 2)
		camera(cx-dx, cy-dy)
		draw()
		poke2(0x5f28,cx,cy)
	end)
end

skip_draw = const(noop)

function draw_with_outline_4(col)
	local palette = monochrome_palette(col)
	
	return suspend(function(draw)
		draw_with_palette(palette)(
			function()
				draw_with_offset( 1, 0)(draw)()
				draw_with_offset( 0, 1)(draw)()
				draw_with_offset(-1, 0)(draw)()
				draw_with_offset( 0,-1)(draw)()
			end
		)()
		draw()
	end)
end

function draw_with_outline_9(col)
	local palette = monochrome_palette(col)
	
	return suspend(function(draw)
		draw_with_palette(palette)(
			function()
				for i=-1,1 do
					for j=-1,1 do
						draw_with_offset(i,j)(draw)()
					end
				end
			end
		)()
		draw()
	end)
end

function draw_with_shadow(col,dx,dy)
	dx = dx or 0
	dy = dy or 1
	local palette = monochrome_palette(col)
	
	return suspend(function(draw)
		chain({
			draw_with_palette(palette),
			draw_with_offset(dx,dy),
		})(draw)()
		draw()
	end)
end

draw_seq = suspend(function(tbl)
	for d in all(tbl) do
		d()
	end
end)
-->8
-- cursors --------------------

ix_array = {}

-- shuffle a list in place
function shuffle(xs)
	for i = #xs, 2, -1 do
		local j = flr(rnd(i)) + 1
		xs[i], xs[j] = xs[j], xs[i]
	end
	return xs
end

ix_array_meta = {
	__index= {
		-- comonad
		map = function(c,f)
			return ix_array.create(
				list_map(c.tbl,f),
				c.ix
			)
		end,
		extend = function(c,f)
			return ix_array.create(
				list_map(c.tbl, function(_,i)
					return f(ix_array.create(c.tbl, i))
				end),
				c.ix
			)
		end,
		-- cursor
		get = function(c)
			return c.tbl[c.ix]
		end,
		set = function(c,x)
			local cpy = list_copy(c.tbl)
			cpy[c.ix] = x
			return ix_array.create(
				cpy,
				c.ix
			)
		end,
		hasprev = function(c)
			return c.ix > 1
		end,
		prev = function(c)
			return c:hasprev()
				and ix_array.create(c.tbl, c.ix-1)
				or  nil
		end,
		first = function(c)
			return ix_array.create(c.tbl, 1)
		end,
		hasnext = function(c)
			return c.ix < #c.tbl
		end,
		next = function(c)
			return c:hasnext()
				and ix_array.create(c.tbl, c.ix+1)
				or  nil
		end,
		last = function(c)
			return ix_array.create(c.tbl, #c.tbl)
		end,
	}
}

function ix_array.create(tbl,ix)
	return setmetatable({
		tbl=tbl,
		ix=ix or 1,
	}, ix_array_meta)
end

-- map cursors

function map_cursor(c,f)
	return {
		get = function(_)
			return f(c:get())
		end,
		set = function(_,x)
			return map_cursor(c:set(x), f)
		end,
		hasprev = function(_)
			return c:hasprev()
		end,
		prev = function(_)
			return c:hasprev()
				and map_cursor(c:prev(), f)
				or  nil
		end,
		first = function(_)
			return map_cursor(c:first(), f)
		end,
		hasnext = function(_)
			return c:hasnext()
		end,
		next = function(_)
			return c:hasnext()
				and map_cursor(c:next(), f)
				or  nil
		end,
		last = function(_)
			return map_cursor(c:last(), f)
		end,
		map = function(_,g)
			return map_cursor(c, compose(f,g))
		end,
	}
end

-- fuse cursors

function fuse_over(cc,f)
	return fuse_cursor(
		cc:set(f(cc:get()))
	)
end

function fuse_cursor(cc)
	return {
		get = function(_)
			return cc:get():get()
		end,
		set = function(_,x)
			return fuse_over(cc, call("set",x))
		end,
		hasprev = function(_)
			return cc:get():hasprev() or cc:hasprev()
		end,
		prev = function(_)
			return cc:get():hasprev()
				and fuse_over(cc, call("prev"))
				or  cc:hasprev()
					and fuse_over(cc:prev(), call("last"))
					or  nil
		end,
		first = function(_)
			return fuse_over(cc:first(), call("first"))
		end,
		hasnext = function(_)
			return cc:get():hasnext() or cc:hasnext()
		end,
		next = function(_)
			return cc:get():hasnext()
				and fuse_over(cc, call("next"))
				or  cc:hasnext()
					and fuse_over(cc:next(), call("first"))
					or  nil
		end,
		last = function(_)
			return fuse_over(cc:last(), call("last"))
		end,
		map = function(x, f)
			return map_cursor(x, f)
		end,
	}
end

function cursor_single(x)
	return ix_array.create({x})
end

-->8
draw_spr = suspend(spr)

function sw_idle(x,y,flp)
	return draw_spr(218,x,y,3,3,flp)
end

function sw_block(x,y,flp)
	return draw_with_outline_9(0)
		(draw_spr(221,x,y,3,3,flp))
end

function sw_attack(x,y,flp)
	return draw_spr(10,x,y,4,2,flp)
end


hero = {
	idle = draw_seq({
		draw_spr(0,0,0,3,4),
		sw_idle(18,0),
	}),
	block = draw_seq({
		draw_spr(3,0,0,3,4),
		sw_block(1,-12),
	}),
	attack = draw_seq({
		draw_spr(6,0,0,4,4),
		sw_attack(32,0),
	}),
}

pirate_1 = {
	idle = draw_seq({
		draw_spr(64,0,0,3,4),
		sw_idle(-18,0,true),
	}),
	block = draw_seq({
		draw_spr(67,0,0,3,4),
		sw_block(0,-12,true),
	}),
	attack = draw_seq({
		draw_spr(70,0,0,4,4),
		sw_attack(-33,0,true),
	}),
}


pirate_2 = {
	idle = draw_seq({
		draw_spr(128,0,0,3,4),
		sw_idle(-20,0,true),
	}),
	block = draw_seq({
		draw_spr(131,0,0,4,4),
		sw_block(-1,-8,true),
	}),
	attack = draw_seq({
		draw_spr(135,0,0,4,4),
		sw_attack(-33,0,true),
	}),
}


pirate_3 = {
	idle = draw_seq({
		draw_spr(192,0,0,3,4),
		sw_idle(-18,0,true),
	}),
	block = draw_seq({
		draw_spr(195,0,0,3,4),
		sw_block(-1,-8,true),
	}),
	attack = draw_seq({
		draw_spr(198,0,0,4,4),
		sw_attack(-33,0,true),
	}),
}


captain = {
	idle = draw_seq({
		draw_spr(77,0,0,3,4),
		sw_idle(-19,-3,true),
	}),
	block = draw_seq({
		draw_spr(74,0,0,3,4),
		sw_block(-1,-11,true),
	}),
	attack = draw_seq({
		draw_spr(139,0,0,4,4),
		sw_attack(-33,-1,true),
	}),
}

-->8
-- menu -----------------------

function character_menu(name,def)
	return ix_array.create({
		{
			label = name .. " : " .. "idle",
			draw  = def.idle,
		},
		{
			label = name .. " : " .. "block",
			draw  = def.block,
		},
		{
			label = name .. " : " .. "attack",
			draw  = def.attack,
		},
	})
end

sprite_menu = fuse_cursor(
	ix_array.create({
		character_menu("hero", hero),
		character_menu("pirate_1", pirate_1),
		character_menu("pirate_2", pirate_2),
		character_menu("pirate_3", pirate_3),
		character_menu("captain", captain),
	})
)
__gfx__
00000000000000000000000000000000000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000007707700000000000000000077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000777777770000000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000070777777777000000000000070700770000000000000000000000000007707700000000000000000000000000000000000000700000000000000000
00000007770777770700700000000070777770077077700000000000000000000777777770000000000000000000000000000000000777700000000000000000
00000077770777077770700000007770777777007707770000000000000000070777777777000000000000000000000000000007777777000000000000000000
00000077700770777770700000077770777077700077007000000000000007770777770700700000000000000000000000077777777000000000000000000000
00000007000077777770000000077700770777770770700700000000000077770777077770700000000000000000000777777770000000000000000000000000
00000000000007777770000000007000077777770707777000000000000077700770777770700000007770000007777777700000000000000000000000000000
00000000000007777700000000000000007777770000777000000000000007000077777770000000000777077777777000000000000000000000000000000000
00000007777000777000000000000000007777700070000000000000000000000007777770000000770777077770000000000000000000000000000000000000
00000777770700000000000000007777000777000077700000000000000000000007777700077770770777000000000000000000000000000000000000000000
00077777070770000000000000777770700000000777700000000000777777777000777077777770007777000000000000000000000000000000000000000000
00777777077077007000000007777070770000770777000000000777777777770700000077777700777770000000000000000000000000000000000000000000
07777770777077777000000077770777077007777777000000070077777777770770000077770000000000000000000000000000000000000000000000000000
07777700777707707700000077707777707707777777000000777007770770077077007077000000000000000000000000000000000000000000000000000000
77770007777007707700000077770777007700777770000000777000000007777707077070000000000000000000000000000000000000000000000000000000
77700077777077700700000077700077077700007700000000000000000007777077077770000000000000000000000000000000000000000000000000000000
77700077770077707770000077770007077700000000000000000000000777770777007700000000000000000000000000000000000000000000000000000000
77000077770077007700000007770700077070000000000000000000077777770777077700000000000000000000000000000000000000000000000000000000
00770777770777007700000000770770777070000000000000000000777777700770070000000000000000000000000000000000000000000000000000000000
07700777700000070700000000007770000077000000000000000000777777707770070000000000000000000000000000000000000000000000000000000000
00007777007777007000000000770700777007000000000000000000077700000000700000000000000000000000000000000000000000000000000000000000
00000070077777707000000000077007777707000000000000000000000007777770070000000000000000000000000000000000000000000000000000000000
00000000777007770000000000000777007770000000000000000007707777777777070000000000000000000000000000000000000000000000000000000000
00000777770077777000000000777770077777000000000000000077777777770077707700000000000000000000000000000000000000000000000000000000
00007777700077777700000000777770077777700000000000000777777700000000777770000000000000000000000000000000000000000000000000000000
00077777000007777700000007777700077777700000000000077777770000000000077770000000000000000000000000000000000000000000000000000000
00077777000077777000000007777700007777000000000007777777000000000000077770000000000000000000000000000000000000000000000000000000
00777770000077770000000077777000007777000000000077777700000000000000077770000000000000000000000000000000000000000000000000000000
00077700000777700000000007770000077770000000000007770000000000000000777700000000000000000000000000000000000000000000000000000000
00777770000777777000000077777000077777700000000077777000000000000000777777000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000077000000000000000000000000000000000000000000000000000000770000000000000000077700700000000000
00000000000000000000000000000000000770000000000000000000000000000000000000000000000000000007700000000000000007007007077000000000
00000007777770000000000000000000007700000000000000000000000000000000000000000000000000070077000770000000000007700070000700077700
00000077777777000000000000000000077007000000000000000007777770000000000000000000000000000770000007000000000070077777000070700070
00000077777777000000000000000000770077770000000000000077777777000000000000000000000000007700770007007770000070700000777070000070
00000007777777070000000000077707700777770000000000000077777777000000000000000000000000077000007777070007000007007777000770000700
00000070000000700000000000777077007777770700000000000007777777070000000000000000007770770077770007000007000000077777770000007000
00000077777770070000000007007700000000007000000000000070000000700000000000000000077707700777777700000070000000077777700000700070
00000077777770000000000070070770077777700700000000000077777770070000000000000000700770000777777000000700000000007777700000777770
00000007777700777000000007777070077777700000000000000077777770000000000000000000007077700077777000070007000000000777000700077700
00000000777000077770000007770000077777007700000000000007777700000000000000000000077707700007770070077777000000070000070077000070
00000000000000770777700000000700007770000777000070700000777000000000000000000000077700000700000007007770000000770077077077707770
00000007000077700707770000077700000000007077770070707070000000777070707000000000000000077007707707700007000007770777070077777770
00000000077777770707077000007070000000777070777007070070000007777777777777000000000770777077707007770777000000070770770770777770
00000077007777777007000700000770770077777070707700007777000077777070707070070000000777007077077077777777000007700770770770777700
00000000070077700000770700007707077077777700007000000007700777770070707000777000000077770077077077077777000007770770707770007000
00000077707777777000007700000070707000777000770700000070077777000000000000777000000077777077070777077770000007070777007770000000
00000000000007777700777000000770770077777077070700000000777777777700000000000000000007707077700777000700000000070077007770000000
00000707707777777000007700000077000000077077007000000000000077777000000000000000000000007007700777000000000000070000007777000000
00000000000000777770770000000000000077777077007000000000007777777777000000000000000000007000000777700000000000070077707777000000
00000077000777777000077000000000000000007000070000000000000000777770000000000000000000007007770777700000000000077077700777700000
00000000000000000000000000000000000007777000000000000000000077777777770000000000000000077707777077770000000000770077777077770000
00000000007000007770000000000000000000000000000000000000007000000077700000000000000000077077777707777000000000770777777077777000
00000000777777777777000000000000000770000077700000000000077770000000000000000000000000777077077770777700000007770770777707777000
00000000777700777777000000000000007777007777770000000007777777777000007700000000000000777077077770777700000007770777077707777000
00000007777770777777000000000000077777777777770000000077777700077777777770000000000007770777077770777700000007770777077707777000
00000007777700077777700000000000777770007777770000000077777000000007777777000000000007707770007770777000000007707770077707770000
00000000000000077777770000000000000000007777777000000000000000000000077777770000000000707770000700000000000000707770007000000000
00000000777000000777770000000000077700000077777000000007770000000000000777777700000000070007000077777000000000070007000777770000
00000000000000000070007000000000000000000007000700000000000000000000000007000070000000070007000000700700000000070007000007007000
00000000070000000007770000000000007000000000777000000000700000000000000000077700000000700007000007000700000000700007000070007000
00000000070000000077777000000000007000000007777700000000700000000000000000777770000000777777000007777000000000777770000077770000
00000007777000000000000000000000000000077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000077777700000000000000000000000000007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000777777770000000000000000000000007707777700000000000000000007777000000000000000000000000007770070000000000000000000000000000
00000777777770000000000000000000000077007777700000000000000000077777700000000000000000000000700700707700000007770000000000000000
00000007000770000000000000000000000770070007700000000000000000777777770000000000000000000000770007000070000070007000000000000000
00000707707700000000000000000000007700077077000000000000000000777777770000000000000000000007007777700007000000007000000000000000
00000777777707000000000000000000077007777777070000000000000000007000770000000000000000000007070000077707000000070000000000000000
00000077777007707777000000000000770000777770077077770000000000707707700000000000000000000000700777700077000000700000000000000000
00000007770077777777700000077707700000077700777777777000000000777777707000000077700000000000007777777000000070007000000000000000
00007770000770777777700000777077000077700007707777777000000000077777007770077777777000000000007777770000000077777000000000000000
00077777077707777777770007007700000777770777077777777700000000007770077777707777777770007777000777770000000007770000000000000000
00777770777077777777777070070777007777707770777777777770777707770000770777777777777777007777700077700070077700007000000000000000
00777777707777777077777007777077077777777077777770777770777777777077707777777777007077000777007000007007777770777000000000000000
00777777707777777707777707770007077777777077777777077777077777770777077777777700000770000000077007707770777777777000000000000000
00777077777777777700777700000700077770777777777777007777000777777707777777770000000000000000777077707707777777777000000000000000
00007077777777770007777700070000777770777777777700077777000007777707777777700000000000000000007077707077700777770000000000000000
00700777777777700777777000007777777700777777777007777770000000777770777777700000000000000000000077707077770007700000000000000000
00000707777777707777770000000077770000077777777077777700000000007777777777000000000000000000007077707077777000000000000000000000
00070700777777707077700000000000700000007777777070777000000000000777777777700000000000000000007077707077777700000000000000000000
00000700777777700707700000000000000000007777777007077000000000000077777777770000000000000000007007770707777777000000000000000000
00707000077777770077000000000000000000000777777700770000000000000000777777707000000000000000007000000070777777700000000000000000
00700007000000007000000000000000000000070000000070000000000000000077000000007700000000000000000700777000077777777000000000000000
00700070077777770070000000000000000000700777777700700000000000000700777777770070000000000000000707777770007777777700000000000000
00000700000000000070000000000000000007000000000000700000000000007000000000000007000000000000007707777777700777777000000000000000
00000700000000000007000000000000000007000000000000070000000000007000000000000007000000000000000007770077770077777000000000000000
00007000007700000007000000000000000070000077000000070000000000070000077777700000700000000000000777777000777707770000000000000000
00007000007077700000700000000000000070000070777000007000000000700000700000077000070000000000007777700000000707700700000000000000
00007000070000777777700000000000000070000700007777777000000000777770700000000770777700000000007777000000000007007777000000000000
00000777700000000000000000000000000007777000000000000000000000000007000000000007000000000000007777000000000000077777770000000000
00000000000000000777770000000000000000000000000007777700000000777700000000000000077777000000007000700000000000000770007000000000
00000777700000000077770000000000000007777000000000777700000000077770000000000000007777000000007000700000000000000700007000000000
00007777700000000777777000000000000077777000000007777770000007777770000000000000077777700000077777700000000000000077777000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000007777000000000000000000000070077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000077777700000000000000000000700770000000000000000007777000000000000000000000000000000000000000000000000000000000000000000000
00000777777770000000000000000007007700700000000000000077777700000000000000000000000000000000000000000000000000000000000000000000
00000777777770000000000000000000077007700000000000000777777770000000000000000000000000000000000000000000000000000000000000000000
00000777777770000000000000000000770077700000000000000777777770000000000000000000000000000000000000000000000000000000000000000000
00000777777770000000000000000007700777700000000000000777777770000000000000000000000000000000000000000000000000000000000000000000
00000077777700000000000000077077007777000000000000000777777770000000000000000000000000000000000000000000000000000000000000000000
00000077777000000000000000770770077770000000000000000077777700000000000000000000000000000000000000000000000000000000000000000000
00000007770007707700000000077000077700077000000000000077777000000000000000000000000000000000000000070000000000000000000000000000
00000000000007777770000000707770000000077070000077770007770007707700000000000000000000000000000000770000077000000000000000000000
00000007007707777777000000770707770077077777000077777700000007777777777000000000000000000000000007700000007700000000000000000000
00000077077707777777700000700007770777077777700007777077007707777777777007000000000000000000000077000000000770000000000000000000
00000777707077707777770000007077770770777777770000077777077707777777770077770000000000000000000770000000000077000000000000000000
00000777707077770077777000777770770707770777777000000777707077700077070777777000000000000000007700000000000007700000000000000000
00000077770077777007700000077777077007777007777700000077707077777700000000777000000000000000077000000000000000770000000000000000
00000770777777777000007700007777077777777700770000000077770077777700000000000000000000000000770000000000000000077000000000000000
00000077007777700000077700007700000777770000007700000007777777777770000000000000000000000007700000000000000000007700000000000000
00000077000000000000077700000000000000000000077700000000777777777770000000000000000000000077000000000000000000000770000000000000
00000070700000000700777700000000070000000000077700000000007777777700770000000000000000000770000000000000000000000077000000000000
00000007770000077770077000000000777000007700777700000000000077700007777770000000000000007700000000000000000000000007700000000000
00000007777777777777000000000000777777777770077000000000070000000777777700000000000000077000000000000000000000000000770000000000
00000000077777777770000000000000007777777777000000000000077700077777770000000000000000770000000000000000000000000000077000000000
00000007000777770000000000000000700077777000000000000007000777777770000770000000077707700000000000000000000000000000007707770000
00000077770000000777000000000007777000000077700000000077770077777007777777700000007707000000000000000000000000000000000770777000
00000077777000007777700000000007777700000777700000000077777000000000077777770000000770700000000000000000000000000000000007700700
00000007777000007777700000000007777000007777700000000077770000000000000777777700007077700000000000000000000000000000000777070070
00000000777000000777770000000000777000000777770000000007770000000000000007777770077707700000000000000000000000000000000770777700
00000007777700000077777000000007777700000077777000000077777000000000000000077777077007000000000000000000000000000000000700077700
00000077777700000777777000000077777700000777777000000777777000000000000000777777077070000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000
